service: invest-valid-serverless-python

provider:
  name: aws
  runtime: python3.7
  region: ap-southeast-1
  memorySize: 256
  timeout: 300
  environment:
    COPORA_TABLE: ${self:service}-copora-${opt:stage}
    ADD_COPORA: ${self:service}-${opt:stage}-create_copora
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COPORA_TABLE}"

plugins:
  - serverless-offline
  - serverless-python-requirements

package:
  individually: true

custom:
  pythonRequirements:
    dockerizePip: true
    zip: true
    slim: true
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - Access-Control-Allow-Origin

functions:
  similarity_compute:
    handler: similarity_compute.similarity_compute
    module: statistics
    environment:
      TUSHARE_TOKEN: ${env:TUSHARE_TOKEN}
    events:
      - http:
          path: statistics/similarity_compute
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  create_copora:
    handler: add_copora.add_copora
    module: robot_coporaCURD
    events:
      - http:
          path: robot/add_copora
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  compute_vector:
    handler: compute_vector.compute_vector
    module: robot_compute_vector
    memorySize: 3008
    events:
      - http:
          path: robot/compute_vector
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

resources:
  Resources:
    CoporaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: corpora_id
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: corpora_id
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:service}-copora-${opt:stage}
