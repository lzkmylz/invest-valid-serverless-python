service: invest-valid-serverless-python

provider:
  name: aws
  runtime: python3.6
  region: ap-southeast-1
  memorySize: 256
  timeout: 30
  environment:
    CORPORA_TABLE: ${self:service}-corpora-${opt:stage}
    ADD_CORPORA: ${self:service}-${opt:stage}-add_corpora
    COMPUTE_VECTOR: ${self:service}-${opt:stage}-compute_vector_impl
    ANSWER_TABLE: ${self:service}-answer-${opt:stage}
    COMPUTE_ANSWER: ${self:service}-${opt:stage}-compute_answer
    SCHEDULED_TRAIN_MODEL: ${self:service}-${opt:stage}-train_gru_model
    SCHEDULED_TRAIN_INDEX_MODEL: ${self:service}-${opt:stage}-dl_gru_SH_index
    GRU_PREDICT_TABLE: ${self:service}-gru-predict-result-${opt:stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.CORPORA_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ANSWER_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GRU_PREDICT_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GRU_PREDICT_TABLE}/index/*"

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-dynamodb-ttl
  - serverless-offline-scheduler

package:
  individually: true
  excludeDevDependencies: false

custom:
  pythonRequirements:
    dockerizePip: true
    zip: true
    slim: true
  dynamodb:
    ttl:
      - table: ${self:provider.environment.ANSWER_TABLE}
        field: ttl
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - Access-Control-Allow-Origin

functions:
  scheduled_train_model:
    handler: scheduled_train_model.scheduled_train_model
    module: dl_gru_scheduled
    events:
      - schedule: rate(6 hours)

  dl_gru_SH_index:
    handler: dl_gru_SH_index
    module: dl_gru_SH_index
    environment:
      TUSHARE_TOKEN: ${env:TUSHARE_TOKEN}
    memorySize: 3008
    timeout: 900

  train_gru_model:
    handler: train_gru_model.train_gru_model
    module: dl_gru_ah
    environment:
      TUSHARE_TOKEN: ${env:TUSHARE_TOKEN}
    memorySize: 3008
    timeout: 900

  similarity_compute:
    handler: similarity_compute.similarity_compute
    module: statistics
    environment:
      TUSHARE_TOKEN: ${env:TUSHARE_TOKEN}
    events:
      - http:
          path: statistics/similarity_compute
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  rsrs_compute:
    handler: rsrs_compute.rsrs_compute
    module: statistics
    environment:
      TUSHARE_TOKEN: ${env:TUSHARE_TOKEN}
    events:
      - http:
          path: statistics/rsrs_compute
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  add_corpora:
    handler: add_corpora.add_corpora
    module: robot_corporaCURD

  compute_vector_impl:
    handler: compute_vector.compute_vector
    module: robot_compute_vector_impl
    memorySize: 3008
    timeout: 300

  compute_answer:
    handler: compute_answer.compute_answer
    module: robot_compute_answer
    memorySize: 512
    timeout: 300

  compute_vector:
    handler: compute_vector.compute_vector
    module: robot_compute_vector
    events:
      - http:
          path: robot/compute_vector
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

  query_answer:
    handler: query_answer.query_answer
    module: robot_query_answer
    events:
      - http:
          path: robot/query_answer
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

resources:
  Resources:
    CorporaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: corpora_id
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: corpora_id
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:service}-corpora-${opt:stage}
    AnswerStoreDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: request_id
            AttributeType: S
        KeySchema:
          - AttributeName: request_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:service}-answer-${opt:stage}
    GRUPredictDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: stock_name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: stockName
            KeySchema:
              - AttributeName: stock_name
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                - id
                - trade_date
                - predict_result
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:service}-gru-predict-result-${opt:stage}
